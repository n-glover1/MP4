/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MP4Package;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Noah
 */
public class MP4JFrame extends javax.swing.JFrame {

    /**
     * Creates new form MP4JFrame
     */
    public MP4JFrame() throws IOException {
        initComponents();
        Room[] rooms = new Room[21];
        createRooms(rooms);
        String s = "";
        for(int i = 0;i < 21; i++) {
            s = "" + rooms[i].getRoomNum();
            System.out.println(s);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RoomImage = new javax.swing.JPanel();
        Map = new javax.swing.JPanel();
        CommandLine = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        OldTextInfo = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RoomImage.setBackground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout RoomImageLayout = new javax.swing.GroupLayout(RoomImage);
        RoomImage.setLayout(RoomImageLayout);
        RoomImageLayout.setHorizontalGroup(
            RoomImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        RoomImageLayout.setVerticalGroup(
            RoomImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );

        Map.setBackground(new java.awt.Color(0, 255, 51));

        javax.swing.GroupLayout MapLayout = new javax.swing.GroupLayout(Map);
        Map.setLayout(MapLayout);
        MapLayout.setHorizontalGroup(
            MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        MapLayout.setVerticalGroup(
            MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );

        CommandLine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CommandLine.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        CommandLine.setText("Enter Commands Here");

        OldTextInfo.setEditable(false);
        jScrollPane2.setViewportView(OldTextInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(CommandLine, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RoomImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CommandLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Map, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RoomImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MP4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MP4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MP4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MP4JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MP4JFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MP4JFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void createRooms(Room[] rooms) throws FileNotFoundException, IOException {
        int temp = 0;
        String input;
        int roomNum = 0;
        String roomName = "";
        int[] directions = {-2,-2,-2,-2};
        FileReader fr = new FileReader("C:\\Users\\Noah\\Dropbox\\Java-Glover-Noah\\NetBeansProjects\\MP4\\src\\TextDocuments\\TrailRoomMap.txt");
        BufferedReader br = new BufferedReader(fr);
        while((input = br.readLine()) != null) {
            directions[0] = -2;
            directions[1] = -2;
            directions[2] = -2;
            directions[3] = -2;
            System.out.println(input);
            for(int i = 0; i < input.length(); i++) {
                if(input.charAt(i) == '-' && input.charAt(i+1) == '-') {
                    roomNum = Integer.parseInt(input.substring(0, i));
                    input = input.substring(i+2);
                    break;
                }
            }
            for(int i = 0; i < input.length(); i++) {
                if(input.charAt(i) == '-' && input.charAt(i+1) == '-') {
                    roomName = input.substring(0,i);
                    input = input.substring(i+3);
                    break;
                }
            }
            for(int i = 0; i < input.length(); i++) {
                if(input.charAt(i) == ',') {
                    if(directions[0] == -2) {
                        directions[0] = Integer.parseInt(input.substring(0,i));
                        input = input.substring(i+1);
                        i=-1;
                        continue;
                    }
                    if(directions[1] == -2) {
                        directions[1] = Integer.parseInt(input.substring(0,i));
                        input = input.substring(i+1);
                        i=-1;
                        continue;
                    }
                    if(directions[2] == -2) {
                        directions[2] = Integer.parseInt(input.substring(0,i));
                        input = input.substring(i+2);
                        i=-1;
                        continue;
                    }
                    if(directions[3] == -2) {
                        directions[3] = Integer.parseInt(input.substring(0,i));
                        break;
                    }
                }
            }
                    
        }
        rooms[temp] = new Room(roomNum, roomName, directions);
        fr.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CommandLine;
    private javax.swing.JPanel Map;
    private javax.swing.JTextPane OldTextInfo;
    private javax.swing.JPanel RoomImage;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
